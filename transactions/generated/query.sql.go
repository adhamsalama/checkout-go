// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package transactions

import (
	"context"
	"database/sql"
)

const getSumOfExpensesOfAMonth = `-- name: GetSumOfExpensesOfAMonth :one
SELECT SUM(price)
FROM transactions
WHERE user_id = ? AND price < 0 AND CAST(strftime('%Y', date) AS  INT) = ? AND CAST(strftime('%m', date) AS INT) = ?
`

type GetSumOfExpensesOfAMonthParams struct {
	UserID int64  `json:"user_id"`
	Date   string `json:"date"`
	Date_2 string `json:"date_2"`
}

func (q *Queries) GetSumOfExpensesOfAMonth(ctx context.Context, arg GetSumOfExpensesOfAMonthParams) (sql.NullFloat64, error) {
	row := q.db.QueryRowContext(ctx, getSumOfExpensesOfAMonth, arg.UserID, arg.Date, arg.Date_2)
	var sum sql.NullFloat64
	err := row.Scan(&sum)
	return sum, err
}
